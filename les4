#Вычислить число c заданной точностью
import math


def calc_factor(number):
    result = 0
    while number%1 > 0:
        number *= 10
        result+=1
    return result
    
    
accur = float(input("Введите необходимую точность: "))
rouded_pi = round(math.pi, calc_factor(accur))
print(rouded_pi)

#Задайте натуральное число N. Напишите программу, которая составит список простых множителей числа N.
number = int(input("Введите число: "))
i = 2 
list_num = []
while i <= number:
    if number % i == 0:
        list_num.append(i)
        number //= i
        i = 2
    else:
        i += 1
print(f"Простые множители: {list_num}")

#Задайте последовательность чисел. Напишите программу, которая выведет список неповторяющихся элементов исходной последовательности.
source_list = list(map(int, input("Введите числа через пробел:\n").split()))
print(f"Исходный список: {source_list}")
new_list = []
[new_list.append(i) for i in source_list if i not in new_list]
print(f"Список из неповторяющихся элементов: {new_list}")

#Задана натуральная степень k. Сформировать случайным образом список коэффициентов (значения от 0 до 100) многочлена и записать в файл многочлен степени k.
import random


def write_file(st):
    with open('task33.txt', 'w') as data:
        data.write(st)


def rnd():
    return random.randint(0,101)


def create_mn(k):
    lst = [rnd() for i in range(k+1)]
    return lst
    

def create_str(sp):
    lst= sp[::-1]
    wr = ''
    if len(lst) < 1:
        wr = 'x = 0'
    else:
        for i in range(len(lst)):
            if i != len(lst) - 1 and lst[i] != 0 and i != len(lst) - 2:
                wr += f'{lst[i]}x^{len(lst)-i-1}'
                if lst[i+1] != 0:
                    wr += ' + '
            elif i == len(lst) - 2 and lst[i] != 0:
                wr += f'{lst[i]}x'
                if lst[i+1] != 0:
                    wr += ' + '
            elif i == len(lst) - 1 and lst[i] != 0:
                wr += f'{lst[i]} = 0'
            elif i == len(lst) - 1 and lst[i] == 0:
                wr += ' = 0'
    return wr

k = int(input("Введите натуральную степень k = "))
koef = create_mn(k)
write_file(create_str(koef))
    
    
